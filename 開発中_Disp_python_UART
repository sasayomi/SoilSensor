#python->UARTでSLT5006を動かす

import serial
import serial.tools.list_ports
import time
import tkinter as tk
from tkinter import ttk
import tkinter.font as f

# シリアルポートを自動検出する関数
def auto_detect_serial_port():
    ports = list(serial.tools.list_ports.comports())
    for p in ports:
        print(p)
        if 'USB Serial Port' in p.description:
            return p.device
    return None

# シリアルポートをオープンする
ser = serial.Serial(auto_detect_serial_port(), 9600, timeout=1)

# ここでシリアル通信を行う

val=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
temp=0
VWC=0
def repeat():

	com1 = [ 0x02, 0x07, 0x01, 0x01, 0x0D, 0x70 ]
	send1 = bytes(com1)
	print(send1)

	ser.write(send1)

	ser.flush()
	time.sleep(0.5)

	rx = ser.readline()
	print("rx: ", *rx)

	time.sleep(0.5)

	read = 0
	count = 0
	while read == 0:
		com2 = [ 0x01, 0x08, 0x01, 0x00, 0xE6]
		send1 = bytes(com2)
		print(send1)

		ser.write(send1)

		ser.flush()
		time.sleep(0.5)
		rx = ser.readline()
		print("rx: ", *rx)
		if rx[3] == 1:
			read = 1
		count =count+1
		if count==10:
			break
		time.sleep(0.5)

	com3 = [ 0x01, 0x13, 0x10, 0xFC, 0x2C]
	send1 = bytes(com3)
	print(send1)

	ser.write(send1)

	ser.flush()
	time.sleep(0.5)
	global val
	val = ser.readline()
	print("rx: ", *val)
	global temp
	temp=(val[3]+val[4]*256)*0.0625
	bulk=(val[5]+val[6]*256)*0.001
	VWC=(val[9]+val[10]*256)*0.1
	VWCR=(val[7]+val[8]*256)*0.1
	VWCC=(val[11]+val[12]*256)*0.1
	pore=(val[15]+val[16]*256)*0.001


	print("temp",temp,"℃")
	print("ECBulk",bulk,"dS/m")
	print("VWCSoil",VWC,"%")
	print("VWCRock",VWCR,"%")
	print("VWCCoco",VWCC,"%")
	print("ECPore",pore,"dS/m")

	root.after(5000, repeat)


#出力関数
def value():
	#v1=val[3]
	global temp
	repeat()
	time.sleep(0.5)
	global val
	temp=(val[3]+val[4]*256)*0.0625
	bulk=(val[5]+val[6]*256)*0.001
	VWC=(val[9]+val[10]*256)*0.1
	VWCR=(val[7]+val[8]*256)*0.1
	VWCC=(val[11]+val[12]*256)*0.1
	pore=(val[15]+val[16]*256)*0.001

	root.after(5000, value)
	print(val[3])
	t=val[3]
	return t
	

def tempx():
	global val
	t=(val[3]+val[4]*256)*0.0625
	return t



def vwcx():
	temp=(val[3]+val[4]*256)*0.0625
	return temp

#GUI
"""
root = tk.Tk()
root.title("tkinterによるGUI画面作成")
root.geometry("500x400")
root.after(5000, value)
time.sleep(3)
"""

#時刻
def time_string():
    return time.strftime('%H:%M:%S')

#更新
def update():
    label.configure(text=time_string())
    lab11.configure(text=tempx())
    label.after(1000, update)

#GUI
root = tk.Tk()
root.title("SoilSensor")
root.geometry("500x400")
root["bg"] = "black"

style = ttk.Style()
style.configure('TLabel', background='black', foreground='white')

label = ttk.Label(root, text=time_string(), font=('Digital-7', 40))
label.grid(row=0,column=0,columnspan=2)

font1 = f.Font(family="Lucida Console", weight="bold", size=30, slant="italic")
lab10 = ttk.Label(root, text="温度",font=("",36))
lab10.grid(row=1,column=0)
lab11 = ttk.Label(root, text=tempx(),font=("",36))
lab11.grid(row=1,column=1)
lab12 = ttk.Label(root, text="℃",font=("",36))
lab12.grid(row=1,column=2)
lab20 = ttk.Label(root, text="温度",font=("",36))
lab20.grid(row=2,column=0)
lab21 = ttk.Label(root, text=vwcx(),font=("",36))
lab21.grid(row=2,column=1)
lab22 = ttk.Label(root, text="℃",font=("",36))
lab22.grid(row=2,column=2)

label.after(1000, update)
label.after(1000, repeat)
root.grid_columnconfigure(0, weight=1)
root.grid_rowconfigure(0, weight=1)
root.mainloop()

# シリアルポートをクローズする
ser.close()
